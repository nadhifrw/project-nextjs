// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// // Define the User model
// model User {
//   id        Int      @id @default(autoincrement()) // Auto-incrementing primary key
//   username  String   @unique                      // Unique username
//   email     String   @unique                      // Unique email
//   password  String                                // Hashed password
//   createdAt DateTime @default(now())              // Timestamp for when the user was created
//   updatedAt DateTime @updatedAt                   // Automatically updated timestamp for when the user was last updated

//   Session Session[]
// }

// // Optional: Add an example session model if you're managing sessions in the database
// model Session {
//   id           Int      @id @default(autoincrement()) // Auto-incrementing primary key
//   userId       Int                                     
//   user         User     @relation(fields: [userId], references: [id]) // Foreign key relation to User
//   sessionToken String   @unique                        // Unique token for the session
//   expires      DateTime                               // Expiration date for the session
// }

model User {
  id        String   @id @default(cuid()) // Auto-incrementing primary key
  username  String   @unique                      // Unique username                      // Unique email
  password  String                                // Hashed password
  createdAt DateTime @default(now())              // Timestamp for when the user was created
  updatedAt DateTime @updatedAt                   // Automatically updated timestamp for when the user was last updated

}

model Departement {
  id_departemen Int     @id
  nama          String
  dosen         Dosen[]
}

model Dosen {
  nidn           Int          @id
  nama           String
  departemen     Departement   @relation(fields: [id_departemen], references: [id_departemen])
  id_departemen  Int
  Pengabdian     Pengabdian[]
  penelitian     Penelitian[]
}

model Penelitian {
  id_data Int      @id
  judul   String
  penulis Dosen[]
  tingkat String
  url     String
}

model Pengabdian {
  id_data Int      @id
  judul   String
  penulis Dosen[]
  tingkat String
  url     String
}